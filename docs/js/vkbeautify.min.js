!function(){function createShiftArr(step){var space="    ";if(isNaN(parseInt(step)))space=step;else switch(step){case 1:space=" ";break;case 2:space="  ";break;case 3:space="   ";break;case 4:space="    ";break;case 5:space="     ";break;case 6:space="      ";break;case 7:space="       ";break;case 8:space="        ";break;case 9:space="         ";break;case 10:space="          ";break;case 11:space="           ";break;case 12:space="            "}var shift=["\n"];for(ix=0;ix<100;ix++)shift.push(shift[ix]+space);return shift}function vkbeautify(){this.step="\t",this.shift=createShiftArr(this.step)}vkbeautify.prototype.xml=function(text,step){for(var ar=text.replace(/>\s{0,}</g,"><").replace(/</g,"~::~<").replace(/\s*xmlns\:/g,"~::~xmlns:").replace(/\s*xmlns\=/g,"~::~xmlns=").split("~::~"),len=ar.length,inComment=!1,deep=0,str="",ix=0,shift=step?createShiftArr(step):this.shift,ix=0;ix<len;ix++)-1<ar[ix].search(/<!/)?(str+=shift[deep]+ar[ix],inComment=!0,(-1<ar[ix].search(/-->/)||-1<ar[ix].search(/\]>/)||-1<ar[ix].search(/!DOCTYPE/))&&(inComment=!1)):-1<ar[ix].search(/-->/)||-1<ar[ix].search(/\]>/)?(str+=ar[ix],inComment=!1):/^<\w/.exec(ar[ix-1])&&/^<\/\w/.exec(ar[ix])&&/^<[\w:\-\.\,]+/.exec(ar[ix-1])==/^<\/[\w:\-\.\,]+/.exec(ar[ix])[0].replace("/","")?(str+=ar[ix],inComment||deep--):-1<ar[ix].search(/<\w/)&&-1==ar[ix].search(/<\//)&&-1==ar[ix].search(/\/>/)?str=inComment?str+ar[ix]:str+(shift[deep++]+ar[ix]):-1<ar[ix].search(/<\w/)&&-1<ar[ix].search(/<\//)?str=inComment?str+ar[ix]:str+(shift[deep]+ar[ix]):-1<ar[ix].search(/<\//)?str=inComment?str+ar[ix]:str+(shift[--deep]+ar[ix]):-1<ar[ix].search(/\/>/)?str=inComment?str+ar[ix]:str+(shift[deep]+ar[ix]):-1<ar[ix].search(/<\?/)||-1<ar[ix].search(/xmlns\:/)||-1<ar[ix].search(/xmlns\=/)?str+=shift[deep]+ar[ix]:str+=ar[ix];return"\n"==str[0]?str.slice(1):str},vkbeautify.prototype.json=function(text,step){step=step||this.step;return"undefined"==typeof JSON?text:"string"==typeof text?JSON.stringify(JSON.parse(text),null,step):"object"==typeof text?JSON.stringify(text,null,step):text},vkbeautify.prototype.css=function(text,step){for(var ar=text.replace(/\s{1,}/g," ").replace(/\{/g,"{~::~").replace(/\}/g,"~::~}~::~").replace(/\;/g,";~::~").replace(/\/\*/g,"~::~/*").replace(/\*\//g,"*/~::~").replace(/~::~\s{0,}~::~/g,"~::~").split("~::~"),len=ar.length,deep=0,str="",ix=0,shift=step?createShiftArr(step):this.shift,ix=0;ix<len;ix++)/\{/.exec(ar[ix])?str+=shift[deep++]+ar[ix]:/\}/.exec(ar[ix])?str+=shift[--deep]+ar[ix]:(/\*\\/.exec(ar[ix]),str+=shift[deep]+ar[ix]);return str.replace(/^\n{1,}/,"")},vkbeautify.prototype.sql=function(text,step){for(var ar_by_quote=text.replace(/\s{1,}/g," ").replace(/\'/gi,"~::~'").split("~::~"),len=ar_by_quote.length,ar=[],deep=0,tab=this.step,parenthesisLevel=0,str="",ix=0,shift=step?createShiftArr(step):this.shift,ix=0;ix<len;ix++)ar=ix%2?ar.concat(ar_by_quote[ix]):ar.concat(function(str,tab){return str.replace(/\s{1,}/g," ").replace(/ AND /gi,"~::~"+tab+tab+"AND ").replace(/ BETWEEN /gi,"~::~"+tab+"BETWEEN ").replace(/ CASE /gi,"~::~"+tab+"CASE ").replace(/ ELSE /gi,"~::~"+tab+"ELSE ").replace(/ END /gi,"~::~"+tab+"END ").replace(/ FROM /gi,"~::~FROM ").replace(/ GROUP\s{1,}BY/gi,"~::~GROUP BY ").replace(/ HAVING /gi,"~::~HAVING ").replace(/ IN /gi," IN ").replace(/ JOIN /gi,"~::~JOIN ").replace(/ CROSS~::~{1,}JOIN /gi,"~::~CROSS JOIN ").replace(/ INNER~::~{1,}JOIN /gi,"~::~INNER JOIN ").replace(/ LEFT~::~{1,}JOIN /gi,"~::~LEFT JOIN ").replace(/ RIGHT~::~{1,}JOIN /gi,"~::~RIGHT JOIN ").replace(/ ON /gi,"~::~"+tab+"ON ").replace(/ OR /gi,"~::~"+tab+tab+"OR ").replace(/ ORDER\s{1,}BY/gi,"~::~ORDER BY ").replace(/ OVER /gi,"~::~"+tab+"OVER ").replace(/\(\s{0,}SELECT /gi,"~::~(SELECT ").replace(/\)\s{0,}SELECT /gi,")~::~SELECT ").replace(/ THEN /gi," THEN~::~"+tab).replace(/ UNION /gi,"~::~UNION~::~").replace(/ USING /gi,"~::~USING ").replace(/ WHEN /gi,"~::~"+tab+"WHEN ").replace(/ WHERE /gi,"~::~WHERE ").replace(/ WITH /gi,"~::~WITH ").replace(/ ALL /gi," ALL ").replace(/ AS /gi," AS ").replace(/ ASC /gi," ASC ").replace(/ DESC /gi," DESC ").replace(/ DISTINCT /gi," DISTINCT ").replace(/ EXISTS /gi," EXISTS ").replace(/ NOT /gi," NOT ").replace(/ NULL /gi," NULL ").replace(/ LIKE /gi," LIKE ").replace(/\s{0,}SELECT /gi,"SELECT ").replace(/\s{0,}UPDATE /gi,"UPDATE ").replace(/ SET /gi," SET ").replace(/~::~{1,}/g,"~::~").split("~::~")}(ar_by_quote[ix],tab));for(len=ar.length,ix=0;ix<len;ix++)parenthesisLevel=function(str,parenthesisLevel){return parenthesisLevel-(str.replace(/\(/g,"").length-str.replace(/\)/g,"").length)}(ar[ix],parenthesisLevel),/\s{0,}\s{0,}SELECT\s{0,}/.exec(ar[ix])&&(ar[ix]=ar[ix].replace(/\,/g,",\n"+tab+tab)),/\s{0,}\s{0,}SET\s{0,}/.exec(ar[ix])&&(ar[ix]=ar[ix].replace(/\,/g,",\n"+tab+tab)),/\s{0,}\(\s{0,}SELECT\s{0,}/.exec(ar[ix])?str+=shift[++deep]+ar[ix]:/\'/.exec(ar[ix])?(parenthesisLevel<1&&deep&&deep--,str+=ar[ix]):(str+=shift[deep]+ar[ix],parenthesisLevel<1&&deep&&deep--);return str=str.replace(/^\n{1,}/,"").replace(/\n{1,}/g,"\n")},vkbeautify.prototype.xmlmin=function(text,preserveComments){return(preserveComments?text:text.replace(/\<![ \r\n\t]*(--([^\-]|[\r\n]|-[^\-])*--[ \r\n\t]*)\>/g,"").replace(/[ \r\n\t]{1,}xmlns/g," xmlns")).replace(/>\s{0,}</g,"><")},vkbeautify.prototype.jsonmin=function(text){return"undefined"==typeof JSON?text:JSON.stringify(JSON.parse(text),null,0)},vkbeautify.prototype.cssmin=function(text,preserveComments){return(preserveComments?text:text.replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\//g,"")).replace(/\s{1,}/g," ").replace(/\{\s{1,}/g,"{").replace(/\}\s{1,}/g,"}").replace(/\;\s{1,}/g,";").replace(/\/\*\s{1,}/g,"/*").replace(/\*\/\s{1,}/g,"*/")},vkbeautify.prototype.sqlmin=function(text){return text.replace(/\s{1,}/g," ").replace(/\s{1,}\(/,"(").replace(/\s{1,}\)/,")")},window.vkbeautify=new vkbeautify}();